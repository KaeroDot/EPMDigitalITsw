% convert selected results into CSV files

% reminder for algorithm prefixes:
%  - FE: frequency estimation algorithm defined in DI.EstimationAlgorithm - PSFE
%  - SR: Spline resampling + FFT rectangular window
%  - WF: WFFT HFT116D,
%  - MH: MHFE,
%  - WR: WRMS
%  - SV: resamplingSVstream

%% varied frequency, with 2nd harmonic
fnpart = 'results/varied_f_h2/varied_f_h2input_and_plot_data';
load([fnpart '.mat']);
csvdata = [ndaxes.values{1}(:,1)(:), ...
           ndres.FE_AErr.v(1, :)(:), wrapToPi(ndres.FE_phErr.v(1, :))(:), ...
           ndres.SR_AErr.v(1, :)(:), wrapToPi(ndres.SR_phErr.v(1, :))(:), ...
           ndres.WF_AErr.v(1, :)(:), wrapToPi(ndres.WF_phErr.v(1, :))(:), ...
           ndres.MH_AErr.v(1, :)(:), wrapToPi(ndres.MH_phErr.v(1, :))(:), ...
           ndres.WR_AErr.v(1, :)(:), wrapToPi(ndres.WR_phErr.v(1, :))(:), ...
           ndres.SV_AErr.v(1, :)(:), wrapToPi(ndres.SV_phErr.v(1, :))(:), ...
           ndres.FE_AErr.v(2, :)(:), wrapToPi(ndres.FE_phErr.v(2, :))(:), ...
           ndres.SR_AErr.v(2, :)(:), wrapToPi(ndres.SR_phErr.v(2, :))(:), ...
           ndres.WF_AErr.v(2, :)(:), wrapToPi(ndres.WF_phErr.v(2, :))(:), ...
           ndres.MH_AErr.v(2, :)(:), wrapToPi(ndres.MH_phErr.v(2, :))(:), ...
           ndres.WR_AErr.v(2, :)(:), wrapToPi(ndres.WR_phErr.v(2, :))(:), ...
           ndres.SV_AErr.v(2, :)(:), wrapToPi(ndres.SV_phErr.v(2, :))(:), ...
           ];
csvfilename = [fnpart '.csv'];
fid = fopen(csvfilename, 'w');
fprintf(fid, ['f;' ...
              'FE_AErr_h1;FE_phErr_h1; ' ...
              'SR_AErr_h1;SR_phErr_h1; ' ...
              'WF_AErr_h1;WF_phErr_h1; ' ...
              'MH_AErr_h1;MH_phErr_h1; ' ...
              'WR_AErr_h1;WR_phErr_h1; ' ...
              'SV_AErr_h1;SV_phErr_h1; ' ....
              'FE_AErr_h2;FE_phErr_h2; ' ...
              'SR_AErr_h2;SR_phErr_h2; ' ...
              'WF_AErr_h2;WF_phErr_h2; ' ...
              'MH_AErr_h2;MH_phErr_h2; ' ...
              'WR_AErr_h2;WR_phErr_h2; ' ...
              'SV_AErr_h2;SV_phErr_h2 ' ....
              '\n']);
fclose(fid);
dlmwrite(csvfilename, csvdata, 'delimiter', ';', '-append');

% calculation times
csvfilename = [fnpart '_calctime.csv'];
csvdata = [ndaxes.values{1}(:,1)(:), ...
           ndres.FE_ct.v(1, :)(:), ...
           ndres.SR_ct.v(1, :)(:), ...
           ndres.WF_ct.v(1, :)(:), ...
           ndres.MH_ct.v(1, :)(:), ...
           ndres.WR_ct.v(1, :)(:), ...
           ndres.SV_ct.v(1, :)(:), ...
           ];
fid = fopen(csvfilename, 'w');
fprintf(fid, ['f;' ...
              'FE_ct; ' ...
              'SR_ct; ' ...
              'WF_ct; ' ...
              'MH_ct; ' ...
              'WR_ct; ' ...
              'SV_ct ' ....
              '\n']);
fclose(fid);
dlmwrite(csvfilename, csvdata, 'delimiter', ';', '-append');

%% varied record length, with 2nd harmonic
fnpart = 'results/varied_M_h2/varied_M_h2input_and_plot_data';
load([fnpart '.mat']);
csvdata = [ndaxes.values{1}(:,1)(:), ...
           ndres.FE_AErr.v(1, :)(:), wrapToPi(ndres.FE_phErr.v(1, :))(:), ...
           ndres.SR_AErr.v(1, :)(:), wrapToPi(ndres.SR_phErr.v(1, :))(:), ...
           ndres.WF_AErr.v(1, :)(:), wrapToPi(ndres.WF_phErr.v(1, :))(:), ...
           ndres.MH_AErr.v(1, :)(:), wrapToPi(ndres.MH_phErr.v(1, :))(:), ...
           ndres.WR_AErr.v(1, :)(:), wrapToPi(ndres.WR_phErr.v(1, :))(:), ...
           ndres.SV_AErr.v(1, :)(:), wrapToPi(ndres.SV_phErr.v(1, :))(:), ...
           ndres.FE_AErr.v(2, :)(:), wrapToPi(ndres.FE_phErr.v(2, :))(:), ...
           ndres.SR_AErr.v(2, :)(:), wrapToPi(ndres.SR_phErr.v(2, :))(:), ...
           ndres.WF_AErr.v(2, :)(:), wrapToPi(ndres.WF_phErr.v(2, :))(:), ...
           ndres.MH_AErr.v(2, :)(:), wrapToPi(ndres.MH_phErr.v(2, :))(:), ...
           ndres.WR_AErr.v(2, :)(:), wrapToPi(ndres.WR_phErr.v(2, :))(:), ...
           ndres.SV_AErr.v(2, :)(:), wrapToPi(ndres.SV_phErr.v(2, :))(:), ...
           ];
csvfilename = [fnpart '.csv'];
fid = fopen(csvfilename, 'w');
fprintf(fid, ['M;' ...
              'FE_AErr_h1;FE_phErr_h1; ' ...
              'SR_AErr_h1;SR_phErr_h1; ' ...
              'WF_AErr_h1;WF_phErr_h1; ' ...
              'MH_AErr_h1;MH_phErr_h1; ' ...
              'WR_AErr_h1;WR_phErr_h1; ' ...
              'SV_AErr_h1;SV_phErr_h1; ' ....
              'FE_AErr_h2;FE_phErr_h2; ' ...
              'SR_AErr_h2;SR_phErr_h2; ' ...
              'WF_AErr_h2;WF_phErr_h2; ' ...
              'MH_AErr_h2;MH_phErr_h2; ' ...
              'WR_AErr_h2;WR_phErr_h2; ' ...
              'SV_AErr_h2;SV_phErr_h2 ' ....
              '\n']);
fclose(fid);
dlmwrite(csvfilename, csvdata, 'delimiter', ';', '-append');

% calculation times
csvfilename = [fnpart '_calctime.csv'];
csvdata = [ndaxes.values{1}(:,1)(:), ...
           ndres.FE_ct.v(1, :)(:), ...
           ndres.SR_ct.v(1, :)(:), ...
           ndres.WF_ct.v(1, :)(:), ...
           ndres.MH_ct.v(1, :)(:), ...
           ndres.WR_ct.v(1, :)(:), ...
           ndres.SV_ct.v(1, :)(:), ...
           ];
fid = fopen(csvfilename, 'w');
fprintf(fid, ['M;' ...
              'FE_ct; ' ...
              'SR_ct; ' ...
              'WF_ct; ' ...
              'MH_ct; ' ...
              'WR_ct; ' ...
              'SV_ct ' ....
              '\n']);
fclose(fid);
dlmwrite(csvfilename, csvdata, 'delimiter', ';', '-append');

%% varied sampling frequency, with 2nd harmonic
fnpart = 'results/varied_fs_h2/varied_fs_h2input_and_plot_data';
load([fnpart '.mat']);
csvdata = [ndaxes.values{1}(:,1)(:), ...
           ndres.FE_AErr.v(1, :)(:), wrapToPi(ndres.FE_phErr.v(1, :))(:), ...
           ndres.SR_AErr.v(1, :)(:), wrapToPi(ndres.SR_phErr.v(1, :))(:), ...
           ndres.WF_AErr.v(1, :)(:), wrapToPi(ndres.WF_phErr.v(1, :))(:), ...
           ndres.MH_AErr.v(1, :)(:), wrapToPi(ndres.MH_phErr.v(1, :))(:), ...
           ndres.WR_AErr.v(1, :)(:), wrapToPi(ndres.WR_phErr.v(1, :))(:), ...
           ndres.SV_AErr.v(1, :)(:), wrapToPi(ndres.SV_phErr.v(1, :))(:), ...
           ndres.FE_AErr.v(2, :)(:), wrapToPi(ndres.FE_phErr.v(2, :))(:), ...
           ndres.SR_AErr.v(2, :)(:), wrapToPi(ndres.SR_phErr.v(2, :))(:), ...
           ndres.WF_AErr.v(2, :)(:), wrapToPi(ndres.WF_phErr.v(2, :))(:), ...
           ndres.MH_AErr.v(2, :)(:), wrapToPi(ndres.MH_phErr.v(2, :))(:), ...
           ndres.WR_AErr.v(2, :)(:), wrapToPi(ndres.WR_phErr.v(2, :))(:), ...
           ndres.SV_AErr.v(2, :)(:), wrapToPi(ndres.SV_phErr.v(2, :))(:), ...
           ];
csvfilename = [fnpart '.csv'];
fid = fopen(csvfilename, 'w');
fprintf(fid, ['fs;' ...
              'FE_AErr_h1;FE_phErr_h1; ' ...
              'SR_AErr_h1;SR_phErr_h1; ' ...
              'WF_AErr_h1;WF_phErr_h1; ' ...
              'MH_AErr_h1;MH_phErr_h1; ' ...
              'WR_AErr_h1;WR_phErr_h1; ' ...
              'SV_AErr_h1;SV_phErr_h1; ' ....
              'FE_AErr_h2;FE_phErr_h2; ' ...
              'SR_AErr_h2;SR_phErr_h2; ' ...
              'WF_AErr_h2;WF_phErr_h2; ' ...
              'MH_AErr_h2;MH_phErr_h2; ' ...
              'WR_AErr_h2;WR_phErr_h2; ' ...
              'SV_AErr_h2;SV_phErr_h2 ' ....
              '\n']);
fclose(fid);
dlmwrite(csvfilename, csvdata, 'delimiter', ';', '-append');

% calculation times
csvfilename = [fnpart '_calctime.csv'];
csvdata = [ndaxes.values{1}(:,1)(:), ...
           ndres.FE_ct.v(1, :)(:), ...
           ndres.SR_ct.v(1, :)(:), ...
           ndres.WF_ct.v(1, :)(:), ...
           ndres.MH_ct.v(1, :)(:), ...
           ndres.WR_ct.v(1, :)(:), ...
           ndres.SV_ct.v(1, :)(:), ...
           ];
fid = fopen(csvfilename, 'w');
fprintf(fid, ['fs;' ...
              'FE_ct; ' ...
              'SR_ct; ' ...
              'WF_ct; ' ...
              'MH_ct; ' ...
              'WR_ct; ' ...
              'SV_ct ' ....
              '\n']);
fclose(fid);
dlmwrite(csvfilename, csvdata, 'delimiter', ';', '-append');

%% varied maximum error for SV, with 2nd harmonic
fnpart = 'results/varied_max_error_h1/varied_max_error_h1_input_and_plot_data';
load([fnpart '.mat']);
csvdata = [ndaxes.values{1}(:,1)(:), ...
           ndres.SV_AErr.v(1, :)(:), wrapToPi(ndres.SV_phErr.v(1, :))(:), ...
           ];
csvfilename = [fnpart '.csv'];
fid = fopen(csvfilename, 'w');
fprintf(fid, ['max_error;' ...
              'SV_AErr_h1;SV_phErr_h1 ' ....
              '\n']);
fclose(fid);
dlmwrite(csvfilename, csvdata, 'delimiter', ';', '-append');
